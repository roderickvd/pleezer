name: Cross-compilation on Rust stable

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - '**/docs/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - '**/docs/**'

jobs:
  cross-compile:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4

    - name: Install build tools and ALSA dependencies (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential libasound2-dev pkg-config;

    - name: Install C compiler (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        xcode-select --install || echo "Xcode already installed";

    - name: Install Visual Studio Build Tools (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install visualstudio2022-workload-vctools --yes

    - name: Install Rust stable
      run: rustup install stable

    - name: Cross-compile for ${{ matrix.target }} on Rust stable
      run: |
        rustup target add ${{ matrix.target }}
        cargo build --release --verbose --target ${{ matrix.target }}

    - name: Upload compiled binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/
